syntax = "proto3";
package hybrid;





message Command{

  message Advertise{
    string topic = 1;
    string type = 2;
    optional uint32 queue_size = 4;
    optional bool latch = 5;
  }

  message Unadvertise{
    string topic = 1;
  }

  message Publish{
    string topic = 1;
    string type = 2;
    bytes data = 3;
  }

  message Subscribe{
    string topic = 1;
    string type = 2;
    optional uint32 queue_size = 3;
  }

  message Unsubscribe{
    string topic = 1;
  }

  message CallService{
    string service = 1;
    bytes data = 3;
    uint64 seq = 4;
  }

  message AdvertiseService {
    string service = 1;
    string type = 2;
  }

  message UnadvertiseService {
    string service = 1;
  }

  message ResponseService {
    string service = 1;
    bytes data = 2;
    uint64 seq = 3;
  }

  message Log{
    enum Level{
      DEBUG = 0;
      INFO = 1;
      WARN = 2;
      ERROR = 3;
      FATAL = 4;
    }
    Level level = 1;
    string message = 2;
  }

  enum Type {
    UNKNOWN               = 0;
    ADVERTISE             = 1;
    PUBLISH               = 2;
    UNADVERTISE           = 3;
    SUBSCRIBE             = 4;
    UNSUBSCRIBE           = 5;
    ADVERTISE_SERVICE     = 6;
    CALL_SERVICE          = 7;
    RESPONSE_SERVICE      = 8;
    UNADVERTISE_SERVICE   = 9;

    LOG                   = 10;
    PING                  = 128;
  }
  Type type = 1;

  optional Advertise advertise = 2;
  optional Publish publish = 3;
  optional Unadvertise unadvertise = 4;
  optional Subscribe subscribe = 5;
  optional Unsubscribe unsubscribe = 6;
  optional AdvertiseService advertise_service = 7;
  optional CallService call_service = 8;
  optional ResponseService response_service = 9;
  optional UnadvertiseService unadvertise_service = 10;

  optional Log log = 11;
}